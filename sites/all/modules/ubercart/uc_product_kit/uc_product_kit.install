<?php
// $Id: uc_product_kit.install,v 1.11.2.9 2009/07/21 14:37:20 islandusurper Exp $

/**
 * @file
 * Install file for uc_product_kit
 */

/**
 * Implementation of hook_schema().
 */
function uc_product_kit_schema() {
  $schema['uc_product_kits'] = array(
    'fields' => array(
      'vid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'product_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'mutable' => array(
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'qty' => array(
        'type' => 'int',
        'size' => 'small',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'discount' => array(
        'type' => 'float',
        'not null' => TRUE,
        'default' => 0.0,
      ),
      'ordering' => array(
        'type' => 'int',
        'size' => 'small',
        'not null' => TRUE,
        'default' => 0,
      ),
      'synchronized' => array(
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('vid', 'product_id'),
  );

  return $schema;
}

/**
 * Implementation of hook_install().
 */
function uc_product_kit_install() {
  drupal_install_schema('uc_product_kit');
}

/**
 * Implementation of hook_uninstall().
 */
function uc_product_kit_uninstall() {
  drupal_uninstall_schema('uc_product_kit');
  variable_del('uc_product_kit_mutable');
}

function uc_product_kit_update_1() {
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {uc_product_kits} ADD PRIMARY KEY (nid, product_id)");
      $ret[] = update_sql("ALTER TABLE {uc_product_kits} ADD COLUMN mutable tinyint(1) NOT NULL default 0 AFTER product_id");
      $ret[] = update_sql("ALTER TABLE {uc_product_kits} ADD COLUMN discount float NOT NULL default 0.0 AFTER qty");
    break;
    case 'pgsql':
      $ret[] = update_sql("ALTER TABLE {uc_product_kits} ADD PRIMARY KEY (nid, product_id)");
      db_add_column($ret, 'uc_product_kits', 'mutable', 'smallint', array('not null' => TRUE, 'default' => 0));
      db_add_column($ret, 'uc_product_kits', 'discount', 'float', array('not null' => TRUE, 'default' => 0.0));
    break;
  }
  return $ret;
}

function uc_product_kit_update_2() {
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {uc_product_kits} ADD COLUMN ordering smallint NOT NULL default 0");
    break;
    case 'pgsql':
      db_add_column($ret, 'uc_product_kits', 'ordering', 'smallint', array('not null' => TRUE, 'default' => 0));
    break;
  }
  return $ret;
}

function uc_product_kit_update_3() {
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {uc_product_kits} ADD COLUMN vid mediumint(9) NOT NULL default 0 FIRST");
      $ret[] = update_sql("ALTER TABLE {uc_product_kits} DROP PRIMARY KEY");
      $result = db_query("SELECT nid, vid FROM {node}");
      while ($product = db_fetch_object($result)) {
        db_query("UPDATE {uc_product_kits} SET vid = %d WHERE nid = %d", $product->vid, $product->nid);
      }
      $ret[] = update_sql("ALTER TABLE {uc_product_kits} ADD PRIMARY KEY (vid, product_id)");
    break;
    case 'pgsql':
      db_add_column($ret, 'uc_product_kits', 'vid', 'mediumint', array('not null' => TRUE, 'default' => 0));
      $ret[] = update_sql("ALTER TABLE {uc_product_kits} DROP CONSTRAINT {uc_products}_pkey");
      $result = db_query("SELECT nid, vid FROM {node}");
      while ($product = db_fetch_object($result)) {
        db_query("UPDATE {uc_product_kits} SET vid = %d WHERE nid = %d", $product->vid, $product->nid);
      }
      $ret[] = update_sql("ALTER TABLE {uc_product_kits} ADD PRIMARY KEY (vid, product_id)");
    break;
  }
  return $ret;
}

function uc_product_kit_update_4() {
  $ret = array();
  db_query("UPDATE {node} SET type = 'product_kit' WHERE type = 'kit'");
  if (module_exists('content')) {
    $ret[] = update_sql("ALTER TABLE {content_type_kit} RENAME TO {content_type_product_kit}");
  }
  node_types_rebuild();
  menu_rebuild();
  return $ret;
}

function uc_product_kit_update_5() {
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {uc_product_kits} DROP data");
    break;
    case 'pgsql':
      $ret[] = update_sql("ALTER TABLE {uc_product_kits} DROP data");
    break;
  }
  return $ret;
}

function uc_product_kit_update_6000() {
  $ret = array();

  db_drop_primary_key($ret, 'uc_product_kits');
  db_change_field($ret, 'uc_product_kits', 'vid', 'vid', array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0));
  db_change_field($ret, 'uc_product_kits', 'nid', 'nid', array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0));
  db_change_field($ret, 'uc_product_kits', 'product_id', 'product_id', array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0));
  db_change_field($ret, 'uc_product_kits', 'qty', 'qty', array('type' => 'int', 'unsigned' => TRUE, 'size' => 'small', 'not null' => TRUE, 'default' => 0));
  db_add_primary_key($ret, 'uc_product_kits', array('vid', 'product_id'));

  return $ret;
}

function uc_product_kit_update_6001() {
  $ret = array();

  variable_set('uc_image_product_kit', 'field_image_cache');

  $t = get_t();
  $ret[] = array('success' => TRUE, $t('field_image_cache set as the Ubercart image for product kits.'));

  return $ret;
}

/**
 * Update moved to 6003 to fix flawed beta5 installations.
 * See http://drupal.org/node/400720.
 */
function uc_product_kit_update_6002() {
  $ret = array();

  return $ret;
}

function uc_product_kit_update_6003() {
  $ret = array();

  if (!db_column_exists('uc_product_kits', 'synchronized')) {
    db_add_field($ret, 'uc_product_kits', 'synchronized', array('type' => 'int', 'size', 'tiny', 'not null' => TRUE, 'default' => 0));
    $ret[] = update_sql("UPDATE {uc_product_kits} SET synchronized = 1 WHERE discount < 0");

    switch ($GLOBALS['db_type']) {
      case 'mysql':
      case 'mysqli':
        $ret[] = update_sql("UPDATE {uc_product_kits} AS pk JOIN {uc_products} AS p ON pk.product_id = p.nid SET pk.discount = pk.discount - p.sell_price WHERE pk.discount >= 0;");
      break;
      case 'pgsql':
        $ret[] = update_sql("UPDATE {uc_product_kits} SET discount = discount - (SELECT p.sell_price FROM {uc_products} p JOIN {uc_product_kits} pk ON pk.product_id = p.nid WHERE pk.discount >= 0);");
      break;
    }
  }

  return $ret;
}

